<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.data.dao.UserMapper">
    <resultMap id="userResultMap" type="com.test.data.model.User">
        <id property="id" column="id"/>
        <result property="userName" column="username"/>
        <result property="loginName" column="loginname"/>
        <result property="loginPwd" column="loginpwd"/>
        <result property="salt" column="salt"/>
    </resultMap>

    <sql id="sql1">
        `id`,`username`,`loginname`,`loginpwd`,`salt`
    </sql>

    <select id="findBy" resultMap="userResultMap" parameterType="HashMap">
        select
        <include refid="sql1"/>
        from `user`
        <trim prefixOverrides="and" prefix="where">
            <if test="id!=null">
                and `id`=#{id}
            </if>
            <if test="userName!=null">
                and `username`=#{userName}
            </if>
            <if test="loginname!=null">
                and `loginname`=#{loginName}
            </if>
            <if test="loginpwd!=null">
                and `loginpwd`=#{loginPwd}
            </if>
            <if test="salt!=null">
                and `salt`=#{salt}
            </if>
        </trim>
    </select>

    <select id="countBy" resultType="Integer" parameterType="HashMap">
        select count(*)
        from `user`
        <trim prefix="where" prefixOverrides="and">
            <if test="id!=null">
                and `id`=#{id}
            </if>
            <if test="username!=null">
                and `username`=#{userName}
            </if>
            <if test="loginname!=null">
                and `loginname`=#{loginName}
            </if>
            <if test="loginpwd!=null">
                and `loginpwd`=#{loginPwd}
            </if>
            <if test="salt!=null">
                and `salt`=#{salt}
            </if>
        </trim>
    </select>

    <select id="getEntityById" resultMap="userResultMap" parameterType="Integer">
        select * from `user` where `id`=#{id}
    </select>

    <insert id="insert" parameterType="com.test.data.model.User" useGeneratedKeys="true" keyColumn="id">
        insert into `user` (
        <trim suffix=")" suffixOverrides=",">
            <if test="id!=null">`id`</if>
            <if test="username!=null">`username`</if>
            <if test="loginname!=null">loginname</if>
            <if test="loginpwd!=null">loginpwd</if>
            <if test="salt!=null">salt</if>
        </trim>
        VALUES (
        <trim suffix=")" suffixOverrides=",">
            <if test="id!=null">#{id}</if>
            <if test="username!=null">#{userName}</if>
            <if test="loginname!=null">#{loginName}</if>
            <if test="loginpwd!=null">#{loginPwd}</if>
            <if test="salt">#{salt}</if>
        </trim>
    </insert>

    <insert id="insertBatch" useGeneratedKeys="true" keyColumn="id">
        insert into `user` (id,username,loginname,loginpwd,salt) values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.userName},#{item.loginName},#{item.loginPwd},#{salt})
        </foreach>
    </insert>

    <update id="update"  parameterType="com.test.data.model.User">
        update `user`
        <set>
            <if test="id!=null">`id`=#{id}</if>
            <if test="username!=null">`username`=#{userName}</if>
            <if test="loginname!=null">`loginname`=#{loginName}</if>
            <if test="loginpwd!=null">`loginpwd`=#{loginPwd}</if>
            <if test="salt">`salt`=#{salt}</if>
        </set>
    </update>

    <delete id="delete" parameterType="Integer">
        delete from `user`
        where `id`=#{id}
    </delete>

    <delete id="deleteBatch">
        DELETE FROM `user`
        <where>
            id in
            <foreach collection="array"  item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </delete>




</mapper>